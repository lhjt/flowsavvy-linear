/* tslint:disable */
/* eslint-disable */
/**
 * FlowSavvy API
 * API for managing tasks, events, and schedules on FlowSavvy.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AllDayEvent
 */
export interface AllDayEvent {
    /**
     * 
     * @type {number}
     * @memberof AllDayEvent
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof AllDayEvent
     */
    title?: string;
    /**
     * 
     * @type {Date}
     * @memberof AllDayEvent
     */
    startDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof AllDayEvent
     */
    endDate?: Date;
    /**
     * 
     * @type {string}
     * @memberof AllDayEvent
     */
    color?: string | null;
}

/**
 * Check if a given object implements the AllDayEvent interface.
 */
export function instanceOfAllDayEvent(value: object): value is AllDayEvent {
    return true;
}

export function AllDayEventFromJSON(json: any): AllDayEvent {
    return AllDayEventFromJSONTyped(json, false);
}

export function AllDayEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllDayEvent {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['Title'] == null ? undefined : json['Title'],
        'startDate': json['StartDate'] == null ? undefined : (new Date(json['StartDate'])),
        'endDate': json['EndDate'] == null ? undefined : (new Date(json['EndDate'])),
        'color': json['Color'] == null ? undefined : json['Color'],
    };
}

export function AllDayEventToJSON(json: any): AllDayEvent {
    return AllDayEventToJSONTyped(json, false);
}

export function AllDayEventToJSONTyped(value?: AllDayEvent | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'Title': value['title'],
        'StartDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString().substring(0,10)),
        'EndDate': value['endDate'] == null ? undefined : ((value['endDate']).toISOString().substring(0,10)),
        'Color': value['color'],
    };
}

