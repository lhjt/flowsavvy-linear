/* tslint:disable */
/* eslint-disable */
/**
 * FlowSavvy API
 * API for managing tasks, events, and schedules on FlowSavvy.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Calendar } from './Calendar';
import {
    CalendarFromJSON,
    CalendarFromJSONTyped,
    CalendarToJSON,
    CalendarToJSONTyped,
} from './Calendar';
import type { CalendarAccount } from './CalendarAccount';
import {
    CalendarAccountFromJSON,
    CalendarAccountFromJSONTyped,
    CalendarAccountToJSON,
    CalendarAccountToJSONTyped,
} from './CalendarAccount';

/**
 * 
 * @export
 * @interface CalendarInfoResponse
 */
export interface CalendarInfoResponse {
    /**
     * 
     * @type {Array<Calendar>}
     * @memberof CalendarInfoResponse
     */
    calendars?: Array<Calendar>;
    /**
     * 
     * @type {Array<CalendarAccount>}
     * @memberof CalendarInfoResponse
     */
    calendarAccounts?: Array<CalendarAccount>;
    /**
     * 
     * @type {number}
     * @memberof CalendarInfoResponse
     */
    defaultCalendarID?: number;
}

/**
 * Check if a given object implements the CalendarInfoResponse interface.
 */
export function instanceOfCalendarInfoResponse(value: object): value is CalendarInfoResponse {
    return true;
}

export function CalendarInfoResponseFromJSON(json: any): CalendarInfoResponse {
    return CalendarInfoResponseFromJSONTyped(json, false);
}

export function CalendarInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CalendarInfoResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'calendars': json['calendars'] == null ? undefined : ((json['calendars'] as Array<any>).map(CalendarFromJSON)),
        'calendarAccounts': json['calendarAccounts'] == null ? undefined : ((json['calendarAccounts'] as Array<any>).map(CalendarAccountFromJSON)),
        'defaultCalendarID': json['defaultCalendarID'] == null ? undefined : json['defaultCalendarID'],
    };
}

export function CalendarInfoResponseToJSON(json: any): CalendarInfoResponse {
    return CalendarInfoResponseToJSONTyped(json, false);
}

export function CalendarInfoResponseToJSONTyped(value?: CalendarInfoResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'calendars': value['calendars'] == null ? undefined : ((value['calendars'] as Array<any>).map(CalendarToJSON)),
        'calendarAccounts': value['calendarAccounts'] == null ? undefined : ((value['calendarAccounts'] as Array<any>).map(CalendarAccountToJSON)),
        'defaultCalendarID': value['defaultCalendarID'],
    };
}

