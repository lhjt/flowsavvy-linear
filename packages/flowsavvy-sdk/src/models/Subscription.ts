/* tslint:disable */
/* eslint-disable */
/**
 * FlowSavvy API
 * API for managing tasks, events, and schedules on FlowSavvy.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Subscription
 */
export interface Subscription {
    /**
     * 
     * @type {boolean}
     * @memberof Subscription
     */
    hasClaimedFreeTrial?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Subscription
     */
    isLifetime?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Subscription
     */
    isPro?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    store?: string;
    /**
     * 
     * @type {Date}
     * @memberof Subscription
     */
    expiresUtc?: Date;
}

/**
 * Check if a given object implements the Subscription interface.
 */
export function instanceOfSubscription(value: object): value is Subscription {
    return true;
}

export function SubscriptionFromJSON(json: any): Subscription {
    return SubscriptionFromJSONTyped(json, false);
}

export function SubscriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Subscription {
    if (json == null) {
        return json;
    }
    return {
        
        'hasClaimedFreeTrial': json['hasClaimedFreeTrial'] == null ? undefined : json['hasClaimedFreeTrial'],
        'isLifetime': json['isLifetime'] == null ? undefined : json['isLifetime'],
        'isPro': json['isPro'] == null ? undefined : json['isPro'],
        'store': json['store'] == null ? undefined : json['store'],
        'expiresUtc': json['expiresUtc'] == null ? undefined : (new Date(json['expiresUtc'])),
    };
}

export function SubscriptionToJSON(json: any): Subscription {
    return SubscriptionToJSONTyped(json, false);
}

export function SubscriptionToJSONTyped(value?: Subscription | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'hasClaimedFreeTrial': value['hasClaimedFreeTrial'],
        'isLifetime': value['isLifetime'],
        'isPro': value['isPro'],
        'store': value['store'],
        'expiresUtc': value['expiresUtc'] == null ? undefined : ((value['expiresUtc']).toISOString()),
    };
}

