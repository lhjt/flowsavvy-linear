/* tslint:disable */
/* eslint-disable */
/**
 * FlowSavvy API
 * API for managing tasks, events, and schedules on FlowSavvy.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DifferentVersions
 */
export interface DifferentVersions {
    [key: string]: Date | any;
    /**
     * 
     * @type {Date}
     * @memberof DifferentVersions
     */
    items?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DifferentVersions
     */
    calendars?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DifferentVersions
     */
    subscription?: Date;
}

/**
 * Check if a given object implements the DifferentVersions interface.
 */
export function instanceOfDifferentVersions(value: object): value is DifferentVersions {
    return true;
}

export function DifferentVersionsFromJSON(json: any): DifferentVersions {
    return DifferentVersionsFromJSONTyped(json, false);
}

export function DifferentVersionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DifferentVersions {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'items': json['Items'] == null ? undefined : (new Date(json['Items'])),
        'calendars': json['Calendars'] == null ? undefined : (new Date(json['Calendars'])),
        'subscription': json['Subscription'] == null ? undefined : (new Date(json['Subscription'])),
    };
}

export function DifferentVersionsToJSON(json: any): DifferentVersions {
    return DifferentVersionsToJSONTyped(json, false);
}

export function DifferentVersionsToJSONTyped(value?: DifferentVersions | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'Items': value['items'] == null ? undefined : ((value['items']).toISOString()),
        'Calendars': value['calendars'] == null ? undefined : ((value['calendars']).toISOString()),
        'Subscription': value['subscription'] == null ? undefined : ((value['subscription']).toISOString()),
    };
}

