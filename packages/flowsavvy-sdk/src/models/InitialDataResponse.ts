/* tslint:disable */
/* eslint-disable */
/**
 * FlowSavvy API
 * API for managing tasks, events, and schedules on FlowSavvy.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
    UserToJSONTyped,
} from './User';
import type { OnboardingInfo } from './OnboardingInfo';
import {
    OnboardingInfoFromJSON,
    OnboardingInfoFromJSONTyped,
    OnboardingInfoToJSON,
    OnboardingInfoToJSONTyped,
} from './OnboardingInfo';
import type { ItemSettings } from './ItemSettings';
import {
    ItemSettingsFromJSON,
    ItemSettingsFromJSONTyped,
    ItemSettingsToJSON,
    ItemSettingsToJSONTyped,
} from './ItemSettings';
import type { UserSettings } from './UserSettings';
import {
    UserSettingsFromJSON,
    UserSettingsFromJSONTyped,
    UserSettingsToJSON,
    UserSettingsToJSONTyped,
} from './UserSettings';
import type { Calendar } from './Calendar';
import {
    CalendarFromJSON,
    CalendarFromJSONTyped,
    CalendarToJSON,
    CalendarToJSONTyped,
} from './Calendar';
import type { CalendarAccount } from './CalendarAccount';
import {
    CalendarAccountFromJSON,
    CalendarAccountFromJSONTyped,
    CalendarAccountToJSON,
    CalendarAccountToJSONTyped,
} from './CalendarAccount';
import type { TimeProfile } from './TimeProfile';
import {
    TimeProfileFromJSON,
    TimeProfileFromJSONTyped,
    TimeProfileToJSON,
    TimeProfileToJSONTyped,
} from './TimeProfile';
import type { FeatureFlagOverrideInfo } from './FeatureFlagOverrideInfo';
import {
    FeatureFlagOverrideInfoFromJSON,
    FeatureFlagOverrideInfoFromJSONTyped,
    FeatureFlagOverrideInfoToJSON,
    FeatureFlagOverrideInfoToJSONTyped,
} from './FeatureFlagOverrideInfo';
import type { DifferentVersions } from './DifferentVersions';
import {
    DifferentVersionsFromJSON,
    DifferentVersionsFromJSONTyped,
    DifferentVersionsToJSON,
    DifferentVersionsToJSONTyped,
} from './DifferentVersions';
import type { Subscription } from './Subscription';
import {
    SubscriptionFromJSON,
    SubscriptionFromJSONTyped,
    SubscriptionToJSON,
    SubscriptionToJSONTyped,
} from './Subscription';

/**
 * 
 * @export
 * @interface InitialDataResponse
 */
export interface InitialDataResponse {
    /**
     * 
     * @type {Array<CalendarAccount>}
     * @memberof InitialDataResponse
     */
    calendarAccounts?: Array<CalendarAccount>;
    /**
     * 
     * @type {Array<Calendar>}
     * @memberof InitialDataResponse
     */
    calendars?: Array<Calendar>;
    /**
     * 
     * @type {number}
     * @memberof InitialDataResponse
     */
    defaultCalendarID?: number;
    /**
     * 
     * @type {UserSettings}
     * @memberof InitialDataResponse
     */
    userSettings?: UserSettings;
    /**
     * 
     * @type {number}
     * @memberof InitialDataResponse
     */
    clientToAppOffsetMilliseconds?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof InitialDataResponse
     */
    colors?: Array<string>;
    /**
     * 
     * @type {DifferentVersions}
     * @memberof InitialDataResponse
     */
    differentVersions?: DifferentVersions;
    /**
     * 
     * @type {Subscription}
     * @memberof InitialDataResponse
     */
    subscription?: Subscription;
    /**
     * 
     * @type {OnboardingInfo}
     * @memberof InitialDataResponse
     */
    onboardingInfo?: OnboardingInfo;
    /**
     * 
     * @type {number}
     * @memberof InitialDataResponse
     */
    defaultTimeProfileId?: number;
    /**
     * 
     * @type {Array<TimeProfile>}
     * @memberof InitialDataResponse
     */
    timeProfiles?: Array<TimeProfile>;
    /**
     * 
     * @type {User}
     * @memberof InitialDataResponse
     */
    user?: User;
    /**
     * 
     * @type {ItemSettings}
     * @memberof InitialDataResponse
     */
    itemSettings?: ItemSettings;
    /**
     * 
     * @type {FeatureFlagOverrideInfo}
     * @memberof InitialDataResponse
     */
    featureFlagOverrideInfo?: FeatureFlagOverrideInfo;
}

/**
 * Check if a given object implements the InitialDataResponse interface.
 */
export function instanceOfInitialDataResponse(value: object): value is InitialDataResponse {
    return true;
}

export function InitialDataResponseFromJSON(json: any): InitialDataResponse {
    return InitialDataResponseFromJSONTyped(json, false);
}

export function InitialDataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): InitialDataResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'calendarAccounts': json['calendarAccounts'] == null ? undefined : ((json['calendarAccounts'] as Array<any>).map(CalendarAccountFromJSON)),
        'calendars': json['calendars'] == null ? undefined : ((json['calendars'] as Array<any>).map(CalendarFromJSON)),
        'defaultCalendarID': json['defaultCalendarID'] == null ? undefined : json['defaultCalendarID'],
        'userSettings': json['userSettings'] == null ? undefined : UserSettingsFromJSON(json['userSettings']),
        'clientToAppOffsetMilliseconds': json['clientToAppOffsetMilliseconds'] == null ? undefined : json['clientToAppOffsetMilliseconds'],
        'colors': json['colors'] == null ? undefined : json['colors'],
        'differentVersions': json['differentVersions'] == null ? undefined : DifferentVersionsFromJSON(json['differentVersions']),
        'subscription': json['subscription'] == null ? undefined : SubscriptionFromJSON(json['subscription']),
        'onboardingInfo': json['onboardingInfo'] == null ? undefined : OnboardingInfoFromJSON(json['onboardingInfo']),
        'defaultTimeProfileId': json['defaultTimeProfileId'] == null ? undefined : json['defaultTimeProfileId'],
        'timeProfiles': json['timeProfiles'] == null ? undefined : ((json['timeProfiles'] as Array<any>).map(TimeProfileFromJSON)),
        'user': json['user'] == null ? undefined : UserFromJSON(json['user']),
        'itemSettings': json['itemSettings'] == null ? undefined : ItemSettingsFromJSON(json['itemSettings']),
        'featureFlagOverrideInfo': json['featureFlagOverrideInfo'] == null ? undefined : FeatureFlagOverrideInfoFromJSON(json['featureFlagOverrideInfo']),
    };
}

export function InitialDataResponseToJSON(json: any): InitialDataResponse {
    return InitialDataResponseToJSONTyped(json, false);
}

export function InitialDataResponseToJSONTyped(value?: InitialDataResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'calendarAccounts': value['calendarAccounts'] == null ? undefined : ((value['calendarAccounts'] as Array<any>).map(CalendarAccountToJSON)),
        'calendars': value['calendars'] == null ? undefined : ((value['calendars'] as Array<any>).map(CalendarToJSON)),
        'defaultCalendarID': value['defaultCalendarID'],
        'userSettings': UserSettingsToJSON(value['userSettings']),
        'clientToAppOffsetMilliseconds': value['clientToAppOffsetMilliseconds'],
        'colors': value['colors'],
        'differentVersions': DifferentVersionsToJSON(value['differentVersions']),
        'subscription': SubscriptionToJSON(value['subscription']),
        'onboardingInfo': OnboardingInfoToJSON(value['onboardingInfo']),
        'defaultTimeProfileId': value['defaultTimeProfileId'],
        'timeProfiles': value['timeProfiles'] == null ? undefined : ((value['timeProfiles'] as Array<any>).map(TimeProfileToJSON)),
        'user': UserToJSON(value['user']),
        'itemSettings': ItemSettingsToJSON(value['itemSettings']),
        'featureFlagOverrideInfo': FeatureFlagOverrideInfoToJSON(value['featureFlagOverrideInfo']),
    };
}

