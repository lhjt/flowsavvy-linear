/* tslint:disable */
/* eslint-disable */
/**
 * FlowSavvy API
 * API for managing tasks, events, and schedules on FlowSavvy.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ItemFull } from './ItemFull';
import {
    ItemFullFromJSON,
    ItemFullFromJSONTyped,
    ItemFullToJSON,
    ItemFullToJSONTyped,
} from './ItemFull';

/**
 * 
 * @export
 * @interface ScheduleItem
 */
export interface ScheduleItem {
    /**
     * 
     * @type {number}
     * @memberof ScheduleItem
     */
    itemID?: number;
    /**
     * 
     * @type {ItemFull}
     * @memberof ScheduleItem
     */
    item?: ItemFull;
    /**
     * 
     * @type {number}
     * @memberof ScheduleItem
     */
    instanceID?: number;
    /**
     * 
     * @type {Date}
     * @memberof ScheduleItem
     */
    startTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ScheduleItem
     */
    endTime?: Date;
    /**
     * 
     * @type {string}
     * @memberof ScheduleItem
     */
    color?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof ScheduleItem
     */
    thisPartCompleted?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof ScheduleItem
     */
    instanceStartDateTime?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ScheduleItem
     */
    instanceEndDateTime?: Date;
    /**
     * 
     * @type {number}
     * @memberof ScheduleItem
     */
    id?: number;
}

/**
 * Check if a given object implements the ScheduleItem interface.
 */
export function instanceOfScheduleItem(value: object): value is ScheduleItem {
    return true;
}

export function ScheduleItemFromJSON(json: any): ScheduleItem {
    return ScheduleItemFromJSONTyped(json, false);
}

export function ScheduleItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScheduleItem {
    if (json == null) {
        return json;
    }
    return {
        
        'itemID': json['ItemID'] == null ? undefined : json['ItemID'],
        'item': json['Item'] == null ? undefined : ItemFullFromJSON(json['Item']),
        'instanceID': json['InstanceID'] == null ? undefined : json['InstanceID'],
        'startTime': json['StartTime'] == null ? undefined : (new Date(json['StartTime'])),
        'endTime': json['EndTime'] == null ? undefined : (new Date(json['EndTime'])),
        'color': json['Color'] == null ? undefined : json['Color'],
        'thisPartCompleted': json['ThisPartCompleted'] == null ? undefined : json['ThisPartCompleted'],
        'instanceStartDateTime': json['InstanceStartDateTime'] == null ? undefined : (new Date(json['InstanceStartDateTime'])),
        'instanceEndDateTime': json['InstanceEndDateTime'] == null ? undefined : (new Date(json['InstanceEndDateTime'])),
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function ScheduleItemToJSON(json: any): ScheduleItem {
    return ScheduleItemToJSONTyped(json, false);
}

export function ScheduleItemToJSONTyped(value?: ScheduleItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ItemID': value['itemID'],
        'Item': ItemFullToJSON(value['item']),
        'InstanceID': value['instanceID'],
        'StartTime': value['startTime'] == null ? undefined : ((value['startTime']).toISOString()),
        'EndTime': value['endTime'] == null ? undefined : ((value['endTime']).toISOString()),
        'Color': value['color'],
        'ThisPartCompleted': value['thisPartCompleted'],
        'InstanceStartDateTime': value['instanceStartDateTime'] == null ? undefined : ((value['instanceStartDateTime']).toISOString()),
        'InstanceEndDateTime': value['instanceEndDateTime'] == null ? undefined : ((value['instanceEndDateTime']).toISOString()),
        'id': value['id'],
    };
}

